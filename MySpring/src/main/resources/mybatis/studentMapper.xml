<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.StudentDao">
	<resultMap id="BaseResultMap" type="com.example.demo.model.Student">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="student_id" property="studentId" jdbcType="VARCHAR" />
		<result column="student_name" property="studentName" jdbcType="VARCHAR" />
		<result column="student_pik" property="studentPik" jdbcType="VARCHAR" />
		<result column="student_sex" property="studentSex" jdbcType="INTEGER" />
		<result column="student_email" property="studentEmail" jdbcType="VARCHAR" />
		<result column="student_phone" property="studentPhone" jdbcType="VARCHAR" />
		<result column="student_qq" property="studentQQ" jdbcType="VARCHAR" />
		<result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
		<result column="class_id" property="classId" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
		
		<result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
		<result column="class_name" property="className" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id,student_id,student_name,student_pik,student_sex,student_email,student_phone,teacher_id,class_id,create_time,modify_time
	</sql>
	
	<sql id="Page_Suffix">
		<if test="page != null">
    <![CDATA[  LIMIT #{page.beginRowNo}, #{page.pageSize} ]]>
		</if>
	</sql>
	
	<select id="getCount" resultType="java.lang.Integer" parameterType="String">
		select count(1) from student where teacher_id = #{teacherId,jdbcType=VARCHAR}
	</select>
	
	<select id="selectStudentPageByteacherId" resultMap="BaseResultMap" parameterType="Object">
		select a.*,b.class_name,c.teacher_name from student a left join classes b on a.class_id = b.class_id left join teacher c on a.teacher_id = c.teacher_id
		<where>
			a.teacher_id=#{teacherId,jdbcType=VARCHAR}
		</where>
		order by create_time desc
		<include refid="Page_Suffix" />
	</select>
	
	<select id="selectStudentPageByClassId"  resultMap="BaseResultMap" parameterType="Object">
		select a.*,b.class_name,b.class_num from student a left join classes b on a.teacher_id = b.teacher_id
		<where>
			a.class_id=#{classId,jdbcType=VARCHAR}
		</where>
		order by create_time desc
		<include refid="Page_Suffix" />
	</select>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from student
		where student_id = #{studentId,jdbcType=VARCHAR}
	</select>
	
	<select id="selectByClassId" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from student
		where class_id = #{classId,jdbcType=VARCHAR}
	</select>
	
	<insert id="insertStudent" parameterType="com.example.demo.model.Student">
		insert into student 
		(student_id,student_name,student_pik,student_sex,student_email,student_phone,student_qq,teacher_id,class_id,create_time,modify_time)
		values 
		(#{studentId,jdbcType=VARCHAR},#{studentName,jdbcType=VARCHAR},
		#{studentPik,jdbcType=VARCHAR},#{studentSex,jdbcType=INTEGER},
		#{studentEmail,jdbcType=VARCHAR},#{studentPhone,jdbcType=VARCHAR},#{studentQQ,jdbcType=VARCHAR},#{teacherId,jdbcType=VARCHAR},
		#{classId,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{modifyTime,jdbcType=TIMESTAMP})
	</insert>
	
	<update id="updateStudent" parameterType="com.example.demo.model.Student">
		update student 
		set 
		student_name=#{studentName,jdbcType=VARCHAR},
		student_pik=#{studentPik,jdbcType=VARCHAR},student_sex=#{studentSex,jdbcType=INTEGER},
		student_email=#{studentEmail,jdbcType=VARCHAR},student_phone=#{studentPhone,jdbcType=VARCHAR},teacher_id=#{teacherId,jdbcType=VARCHAR}
		class_id=#{classId,jdbcType=VARCHAR},modify_time=#{modifyTime,jdbcType=TIMESTAMP}
		where student_id=#{studentId,jdbcType=VARCHAR}
	</update>
	
	<delete id="deleteStudent" parameterType="object">
		delete from student where teacher_id=#{teacherId,jdbcType=VARCHAR} and student_id=#{studentId,jdbcType=VARCHAR}
	</delete>
</mapper>