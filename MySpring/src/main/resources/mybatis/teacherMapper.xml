<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.demo.dao.TeacherDao">
	<resultMap id="BaseResultMap" type="com.example.demo.model.Teacher">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="teacher_id" property="teacherId" jdbcType="VARCHAR" />
		<result column="teacher_pik" property="teacherPik" jdbcType="VARCHAR" />
		<result column="teacher_name" property="teacherName" jdbcType="VARCHAR" />
		<result column="teacher_context" property="teacherContext" jdbcType="VARCHAR" />
		<result column="teacher_sex" property="teacherSex" jdbcType="INTEGER" />
		<result column="teacher_age" property="teacherAge" jdbcType="INTEGER" />
		<result column="teacher_email" property="teacherEmail"
			jdbcType="VARCHAR" />
		<result column="teacher_phone" property="teacherPhone"
			jdbcType="VARCHAR" />
		<result column="teacher_qq" property="teacherQQ"
			jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id,teacher_id,teacher_pik,teacher_name,teacher_context,teacher_sex,teacher_age,teacher_email,teacher_phone,teacher_qq,create_time,modify_time
	</sql>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="String">
		select
		<include refid="Base_Column_List" />
		from teacher where teacher_id = #{teacherId,jdbcType=VARCHAR}
	</select>
	
	<select id="selectFiveTeacher" resultMap="BaseResultMap" parameterType="String">
		select
		<include refid="Base_Column_List" />
		from teacher order by create_time desc limit 0,5
	</select>
	
	<update id="updateById" parameterType="com.example.demo.model.Teacher">
		update teacher 
		<set>
			<if test="teacherId != null">
				teacher_id = #{teacherId,jdbcType=VARCHAR},</if>
			<if test="teacherPik != null">
				teacher_pik=#{teacherPik,jdbcType=VARCHAR},</if>
			<if test="teacherName != null">
				teacher_name=#{teacherName,jdbcType=VARCHAR},</if>
			<if test="teacherContext != null">
				teacher_context=#{teacherContext,jdbcType=VARCHAR},</if>
			<if test="teacherSex != null">
				teacher_sex=#{teacherSex,jdbcType=INTEGER},</if>
			<if test="teacherAge != null">
				teacher_age=#{teacherAge,jdbcType=INTEGER},</if>
			<if test="teacherEmail != null">
				teacher_email=#{teacherEmail,jdbcType=VARCHAR},</if>
			<if test="teacherPhone != null">
				teacher_phone=#{teacherPhone,jdbcType=VARCHAR},</if>
			<if test="teacherQQ != null">
				teacher_qq=#{teacherQQ,jdbcType=VARCHAR},</if>
			<if test="createTime != null">
				create_time=#{createTime,jdbcType=VARCHAR},</if>
			<if test="modifyTime != null">
				modify_time=#{modifyTime,jdbcType=TIMESTAMP}</if>
		</set>
		where teacher_id = #{teacherId,jdbcType=VARCHAR}
	</update>
	
	<insert id="insertTeacherInfo" parameterType="com.example.demo.model.Teacher">
		insert into teacher 
		teacher_id,teacher_pik,
		teacher_name,teacher_context,teacher_sex,
		teacher_age,teacher_email,
		teacher_phone,teacher_qq,
		create_time,modify_time
		values 
		(#{teacherId,jdbcType=VARCHAR},#{teacherPik,jdbcType=VARCHAR},
		#{teacherName,jdbcType=VARCHAR},#{teacherContext,jdbcType=VARCHAR},#{teacherSex,jdbcType=INTEGER},
		#{teacherAge,jdbcType=INTEGER},#{teacherEmail,jdbcType=VARCHAR},
		#{teacherPhone,jdbcType=VARCHAR},#{teacherQQ,jdbcType=VARCHAR},
		#{creatTime,jdbcType=TIMESTAMP},#{modifyTime,jdbcType=TIMESTAMP}
		where teacher_id = #{teacherId,jdbcType=VARCHAR})
	</insert>
	
	<delete id="deleteTeacherInfo" parameterType="String">
		delete from teacher where teacher_id=#{teacherId,jdbcType=VARCHAR}
	</delete>
</mapper>